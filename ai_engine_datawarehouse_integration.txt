# AI Engine Data Integration with Datawarehouse

## What the AI Engine Uses from the Datawarehouse

The AI Engine consumes processed, AI-ready datasets from the datawarehouse through a clean interface layer. Here's exactly what data flows from the datawarehouse to the AI Engine:

## Data Interface Architecture

```
AI Engine Services → AI Data Interface Service → Datawarehouse Unified Collection Service
```

### Key Integration Points:
- **File**: `AI_engine/services/data_interface.py` 
- **Interface**: `AIDataInterfaceService` (singleton: `ai_data_interface`)
- **Target**: `datawarehouse/services/unified_data_collection_service.py`
- **Method**: `get_ai_ready_dataset()` - primary data access point

## Complete Data Flow Mapping

### 1. Mood Analytics Data
**Source**: `mood.models.MoodLog` → **Datawarehouse Processing** → **AI Engine Consumption**

```python
AI Engine Receives:
{
    "mood_analytics": {
        "total_entries": 45,
        "date_range": 30,
        "average_mood": 6.7,
        "median_mood": 7.0,
        "mood_volatility": 1.2,
        "min_mood": 3,
        "max_mood": 9,
        "mood_range": 6,
        "daily_averages": {"2024-01-01": 6.5, "2024-01-02": 7.2},
        "trend_analysis": {
            "trend": "improving",
            "slope": 0.15,
            "confidence": 0.85
        },
        "patterns": {
            "weekly_patterns": {...},
            "activity_correlations": {...}
        },
        "consistency_score": 0.75,
        "quality_indicators": {
            "data_density": 0.8,
            "temporal_coverage": 0.9,
            "completeness": 0.85
        }
    }
}
```

**AI Engine Uses For**:
- Mood trend prediction
- Behavioral pattern analysis
- Risk assessment
- Therapy recommendation generation

### 2. Journal Analytics Data
**Source**: `journal.models.JournalEntry` → **Datawarehouse Processing** → **AI Engine Consumption**

```python
AI Engine Receives:
{
    "journal_analytics": {
        "total_entries": 23,
        "total_words": 12450,
        "average_words_per_entry": 541,
        "writing_consistency": {
            "score": 0.68,
            "frequency_pattern": "irregular"
        },
        "temporal_patterns": {
            "preferred_times": ["evening", "night"],
            "writing_streaks": [5, 8, 3]
        },
        "content_diversity": {
            "topic_variance": 0.75,
            "emotional_range": 0.82
        },
        "entries_metadata": [
            {
                "date": "2024-01-01",
                "word_count": 450,
                "mood_mentioned": 6,
                "has_content": true
            }
        ],
        "quality_indicators": {
            "data_density": 0.7,
            "content_richness": 541,
            "temporal_coverage": 0.6,
            "completeness": 0.65
        }
    }
}
```

**AI Engine Uses For**:
- Sentiment analysis and NLP processing
- Topic modeling and theme extraction
- Writing pattern analysis
- Therapeutic progress tracking

### 3. Communication Analytics Data
**Source**: `messaging.models` + Social feeds → **Datawarehouse Processing** → **AI Engine Consumption**

```python
AI Engine Receives:
{
    "communication_analytics": {
        "status": "partial_implementation",
        "specialized_analytics": {
            "engagement_metrics": {...},
            "interaction_patterns": {...}
        },
        "quality_indicators": {
            "data_availability": true,
            "completeness": 0.5
        }
    }
}
```

**AI Engine Uses For**:
- Communication pattern analysis
- Social interaction assessment
- Crisis language detection
- Therapeutic relationship evaluation

### 4. Therapy Session Analytics Data
**Source**: Therapist session notes → **Datawarehouse Processing** → **AI Engine Consumption**

```python
AI Engine Receives:
{
    "therapy_session_analytics": {
        "status": "from_specialized_service",
        "specialized_analytics": {
            "session_frequency": "weekly",
            "avg_session_duration": 50,
            "engagement_level": 0.85,
            "therapeutic_approaches": ["CBT", "mindfulness"],
            "progress_indicators": {...}
        },
        "quality_indicators": {
            "data_availability": true,
            "completeness": 0.8
        }
    }
}
```

**AI Engine Uses For**:
- Session effectiveness analysis
- Treatment approach optimization
- Progress tracking
- Therapeutic relationship assessment

### 5. Behavioral Analytics Data
**Source**: App usage, feature engagement → **Datawarehouse Processing** → **AI Engine Consumption**

```python
AI Engine Receives:
{
    "behavioral_analytics": {
        "status": "from_specialized_service",
        "specialized_analytics": {
            "app_usage_patterns": {...},
            "feature_engagement": {...},
            "session_durations": {...}
        },
        "quality_indicators": {
            "data_availability": true,
            "completeness": 0.7
        }
    }
}
```

**AI Engine Uses For**:
- User engagement analysis
- App usage pattern detection
- Behavioral intervention recommendations
- Digital therapeutic adherence

### 6. Social Analytics Data
**Source**: `feeds.models` → **Datawarehouse Processing** → **AI Engine Consumption**

```python
AI Engine Receives:
{
    "social_analytics": {
        "status": "from_specialized_service",
        "specialized_analytics": {
            "community_engagement": 0.75,
            "peer_interactions": {...},
            "content_preferences": {...},
            "support_network_analysis": {...}
        },
        "quality_indicators": {
            "data_availability": true,
            "completeness": 0.6
        }
    }
}
```

**AI Engine Uses For**:
- Social interaction pattern analysis
- Community engagement assessment
- Peer support network evaluation
- Social mood correlation analysis

### 7. Cross-Domain Processed Insights
**Source**: Multi-domain analysis → **Datawarehouse Processing** → **AI Engine Consumption**

```python
AI Engine Receives:
{
    "processed_insights": {
        "cross_correlations": {
            "mood_journal_correlation": 0.78,
            "social_mood_impact": 0.45,
            "therapy_progress_correlation": 0.82
        },
        "pattern_detection": {
            "recurring_themes": [...],
            "behavioral_triggers": [...],
            "improvement_indicators": [...]
        },
        "data_synthesis": {
            "holistic_user_profile": {...},
            "risk_assessment": {...},
            "intervention_opportunities": [...]
        },
        "quality_score": 0.75
    }
}
```

**AI Engine Uses For**:
- Holistic user understanding
- Cross-domain pattern recognition
- Comprehensive risk assessment
- Integrated therapeutic recommendations

## Quality Metrics and Metadata

### Data Quality Information
```python
AI Engine Receives:
{
    "quality_metrics": {
        "overall_quality": 0.75,
        "completeness": 0.80,
        "domain_scores": {
            "mood_analytics": 0.85,
            "journal_analytics": 0.65,
            "communication_analytics": 0.50,
            "therapy_session_analytics": 0.80,
            "behavioral_analytics": 0.70,
            "social_analytics": 0.60
        },
        "readiness_flags": {
            "ready_for_mood_analysis": true,
            "ready_for_journal_analysis": true,
            "ready_for_behavioral_analysis": true,
            "ready_for_communication_analysis": false,
            "ready_for_therapy_session_analysis": true
        },
        "analysis_recommendation": "proceed_with_caution"
    }
}
```

### Processing Metadata
```python
AI Engine Receives:
{
    "processing_metadata": {
        "collection_time_seconds": 2.45,
        "data_sources_used": ["mood", "journal", "therapy", "social"],
        "processing_version": "2.0_ai_ready",
        "quality_score": 0.75,
        "completeness_score": 0.80,
        "collection_timestamp": "2024-01-15T10:30:00Z",
        "user_id": 123,
        "period_days": 30,
        "cached": false
    }
}
```

## AI Engine Services Data Consumption

### 1. Main AI Analysis Service (`ai_analysis.py`)
**Primary Method**: `analyze_user_data(user, date_range=30)`
**Data Access**: `ai_data_interface.get_ai_ready_dataset(user.id, date_range)`

**Processes**:
- Complete multi-domain analysis
- Ollama LLM processing
- Risk assessment
- Therapy recommendations

### 2. Social Analysis Service (`social_analysis.py`)
**Primary Method**: `analyze_social_interactions(user, days=30)`
**Data Access**: `ai_data_interface.get_ai_ready_dataset(user.id, days)`

**Focuses On**:
- Social engagement patterns
- Community interaction analysis
- Peer support assessment

### 3. Predictive Service (`predictive_service.py`)
**Data Access**: AI-ready datasets for trend analysis
**Processes**:
- Mood decline prediction
- Therapy outcome forecasting
- Risk trend analysis

### 4. Tips Service (`tips_service.py`)
**Data Access**: User summary and analytics
**Generates**:
- Personalized mood tips
- Journaling recommendations
- Activity suggestions

### 5. User Resume Service (`user_resume_service.py`)
**Data Access**: Comprehensive AI datasets
**Generates**:
- 4-card analytics dashboard
- AI therapist summary
- Progress tracking cards

## Caching and Performance

### Dataset Caching
The datawarehouse caches AI-ready datasets in `AIAnalysisDataset` model:
- **Cache Duration**: 6 hours
- **Cache Key**: user_id + period_days
- **Cache Format**: JSON fields optimized for AI consumption

### AI Engine Caching
AI services implement additional caching:
- **Analysis Results**: 1 hour cache
- **LLM Responses**: Response-specific caching
- **Quality Metrics**: Extended caching for stability

## Data Quality Validation

### Pre-Analysis Checks
AI Engine validates data before processing:
1. **Minimum Quality Threshold**: overall_quality >= 0.2
2. **Data Availability**: At least one domain has sufficient data
3. **Readiness Flags**: Check domain-specific readiness
4. **Temporal Coverage**: Ensure adequate time range coverage

### Graceful Degradation
When data quality is insufficient:
- **Partial Analysis**: Process available domains only
- **Quality Warnings**: Include data limitations in results
- **Alternative Insights**: Provide general recommendations
- **Retry Mechanisms**: Suggest data collection improvements

## Summary: Complete Data Pipeline

```
Source Models → Datawarehouse Collection → AI-Ready Processing → AI Engine Analysis
     ↓                    ↓                      ↓                    ↓
- MoodLog           - Specialized Services  - Quality Scoring    - Pattern Analysis
- JournalEntry      - Unified Collection    - Data Aggregation   - LLM Processing  
- Messages          - ETL Processing        - Cross-Domain       - Risk Assessment
- Sessions          - Quality Validation    - Caching           - Recommendations
- Social Posts      - Data Enrichment       - API Formatting    - Insights
- App Usage         - Statistical Analysis  - Metadata          - Predictions
```

This architecture ensures the AI Engine receives high-quality, processed, and validated data while maintaining complete separation from raw data models, enabling sophisticated AI analysis for mental health insights and therapeutic support.
